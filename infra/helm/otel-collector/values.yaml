mode: deployment

ports:
  otlp:
    enabled: true
    containerPort: 4317
    servicePort: 4317
    protocol: TCP
  otlp-http:
    enabled: true
    containerPort: 4318
    servicePort: 4318
    protocol: TCP
  metrics:
    enabled: true
    containerPort: 8889
    servicePort: 8889
    protocol: TCP

service:
  type: ClusterIP

serviceMonitor:
  enabled: true

image:
  repository: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib
  tag: 0.110.0
  pullPolicy: IfNotPresent

config:
  receivers:
    filelog:
      include:
        - /var/log/pods/*/*/*.log
      exclude:
        - /var/log/pods/monitoring_otelcollector-opentelemetry-collector*/opentelemetry-collector/*.log
      start_at: beginning
      operators:
        - type: json_parser
          if: 'body matches "^\\s*\\{"'
          parse_from: body
          on_error: drop
    otlp:
      protocols:
        grpc: {}
        http: {}

  processors:
    batch: {}
    resourcedetection:
      detectors: [env, system, k8snode]
      timeout: 2s
      override: false

    k8sattributes:
      auth_type: serviceAccount
      extract:
        metadata:
          - k8s.pod.name
          - k8s.namespace.name
          - k8s.node.name
          - k8s.pod.uid
          - k8s.deployment.name

  exporters:
    prometheus:
      endpoint: "0.0.0.0:8889"
    logging:
      loglevel: info
    otlp:
      endpoint: tempo.monitoring.svc.cluster.local:4317
      tls:
        insecure: true
    loki:
      endpoint: http://loki.monitoring.svc.cluster.local:3100/loki/api/v1/push
      default_labels_enabled:
        resource: true
        attributes: true
      tls:
        insecure: true

  service:
    telemetry:
      metrics:
        address: 0.0.0.0:8888
    pipelines:
      metrics:
        receivers: [otlp]
        processors: [batch, resourcedetection, k8sattributes]
        exporters: [prometheus, logging]
      logs:
        receivers: [filelog, otlp]
        processors: [batch, resourcedetection, k8sattributes]
        exporters: [loki, logging]
      traces:
        receivers: [otlp]
        processors: [batch, resourcedetection, k8sattributes]
        exporters: [otlp, logging]

resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 500m
    memory: 512Mi

extraVolumes:
  - name: varlogpods
    hostPath:
      path: /var/log/pods
      type: Directory
extraVolumeMounts:
  - name: varlogpods
    mountPath: /var/log/pods
    readOnly: true

extraEnvs:
  - name: K8S_NODE_NAME
    valueFrom:
      fieldRef:
        fieldPath: spec.nodeName
